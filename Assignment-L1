DEVOPS CULTURE IN AN ORGANISATION
DevOps is a set of practices that enable developers and operations work together
to ensure the smooth deployment of software or code to production environment
efficiently and in automated manner. It can also be seen as collaboration between
IT developers and operations to build, test, and release software faster and more
reliably. It adopts the Agile methodology and have a lifecycle which consist of
planning, building, operations, continuous integration and deployment,
monitoring, operation and continuous feedback.
DevOps is also a combination of two words “Dev” which means development of
software and “Ops” which refers to the operations term in an organization that
deploy and maintain the software developed by software engineers. DevOps
practitioners deploy higher quality code faster and efficiently. DevOps applies
automation, continuous delivery and feedback.
Devops helps increase the speed of delivering applications and services. It helps
companies serve their customers better and help them to maintain competition in
the market. DevOps designs processes for efficient releases of software and
ensures quality builds. DevOps foster collaboration between the business,
development and operations teams by communicating and working with people
from other department in an organization to fulfill their objective. This
collaboration helps them deploy fast, reliable and efficient software which is
viewed as DevOps culture.
DevOps culture is describes as a closer collaboration and a shared responsibility
between development and operations for the products they create and maintain.
This helps the organization to align their people, processes and tools towards
satisfying their customers need.
This culture helps to cultivate multidisciplinary teams that take responsibility for
the entire lifecycle of a product. DEvOps team work independently and embrace a
software engineering culture, workflow and toolset that evaluate operational
requirement to the same level of importance as architecture, design and
development. DevOps culture facilitates the work of DevOps alongside people
and processes. With the collaboration between the development and operation 
put is in place, both teams are aware of the processes put in place from planning,
building, testing, deployment and maintenance of the product and services for
the customer.
The teams adopt an Agile methodology which supports breaking down larger
codebase into smaller chunks of code to build and support their products.
Automation should be set in place and ensure there are tools to monitor the
process of the program or product. Automating task such as testing,
configuration, deployment and monitoring helps the team work efficiently and
reduces human error. The collaboration between the development, operations
and other functions in an organization will produce great success for the team
and end-users of the product.
In addition, DevOps culture support the need from the organizational heads and
work in collaboration with other teams to achieve the companies set goal. The
teams should receive feedback from the customers. This will help them improve
the system and correct any short-falls. It also improves collaboration between
development and operations. Monitoring the product with some toolset will help
get feedback loops for diagnosing issues and improve performance of the
product.
In summary organization adopt DevOps culture to enhance communication,
collaboration and quick feedback among the development, operations and other
functions for continuous deployment of fast, reliable and efficient code to their
end-users to meet their objectives and competitiveness in the society. 
IT TOOLS A DEVOPS ENGINEER NEED TO LEARN
DevOps follows a lifecycle of planning, coding, building, testing, release or
deployment, operate and monitoring. There are software tools a DevOps
engineer needs to learn to complete the lifecycle of a product. Some of the tools
are:
Gitlab: Is an open source web-based DevOps lifecyle tool that provides a Gitrepository manager providing wiki, issue-tracking and continuous integration and
deployment pipeline features. It is using to plan in DevOps lifecyle
Git: is a version control system with a repository for source code management
that enables online and offline. It is using during the coding in DevOps lifecycle. It
helps you to track the progress of your development work and coordinate work
among team members
Jenkins: is a tool to use either as a server for continuous integration or a
continuous delivery hub that comes with lots of additional plug-ins to tweak
continuous delivery workflow. It is used to discover issues in code. Jenkins is a
free open-source tools used for automating the delivery pipeline, and let you test
and report changes almost in real-time.
Ansible: is an open-source tool for automating software provisioning,
configuration management and application deployment.
Puppet: is used to manage and automate software inspection, delivery and
operation. Puppet is an open-source tool which has a solid track record and
thousands of modules and is easily integrated with many other platforms.
Chef: is an open-source configuration management tool that allows one turn an
infrastructure into a code to manage data, attribute, roles, environment, and
more. It supports many platforms and easily integrates with cloud-based
platforms. 
Nagios: it is used to find and correct problems in networks and infrastructure.
Nagios is an open-source monitoring tools. It can be used to monitor application,
services, network protocols and more, and it keeps records of things like outages
and failures.
Splunk: this makes machine data and logs accessible to and usable by everyone
on the team.
Kubernetes: this software let you manage hundreds of containers. You can
deploy your container app to a group of computers and automates their
distribution and scheduling. 
